<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>hexo + github 个人博客部署</title>
    <link href="/2025/03/12/hexo-github-%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E9%83%A8%E7%BD%B2/"/>
    <url>/2025/03/12/hexo-github-%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E9%83%A8%E7%BD%B2/</url>
    
    <content type="html"><![CDATA[<p>Hexo 是一个基于 Node.js 的静态博客框架，通常用于搭建个人博客，并可以部署到 GitHub Pages。以下是 Hexo 提交到 GitHub 的完整步骤：</p><hr><h3 id="一、安装-Hexo、node-js-和-Git-部署插件"><a href="#一、安装-Hexo、node-js-和-Git-部署插件" class="headerlink" title="一、安装 Hexo、node.js 和 Git 部署插件"></a><strong>一、安装 Hexo、node.js 和 Git 部署插件</strong></h3><p>如果你还没有安装 Hexo，可以使用以下命令安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install -g hexo-cli  <span class="hljs-comment"># 全局安装 Hexo CLI</span><br>hexo init myblog         <span class="hljs-comment"># 初始化博客目录</span><br><span class="hljs-built_in">cd</span> myblog<br>npm install              <span class="hljs-comment"># 安装依赖</span><br></code></pre></td></tr></table></figure><p>然后安装 Git 部署插件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install hexo-deployer-git --save<br></code></pre></td></tr></table></figure><hr><h3 id="二、配置-config-yml"><a href="#二、配置-config-yml" class="headerlink" title="二、配置 _config.yml"></a><strong>二、配置 <code>_config.yml</code></strong></h3><p>打开 <code>blog/_config.yml</code>，找到 <code>deploy</code> 部分，修改如下：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">deploy:</span><br>  <span class="hljs-attr">type:</span> <span class="hljs-string">git</span><br>  <span class="hljs-attr">repo:</span> <span class="hljs-string">https://github.com/你的GitHub用户名/你的仓库名.git</span><br>  <span class="hljs-attr">branch:</span> <span class="hljs-string">main</span>  <span class="hljs-comment"># 或者 main，取决于 GitHub Pages 设置</span><br></code></pre></td></tr></table></figure><hr><h3 id="三、生成静态文件并提交到-GitHub"><a href="#三、生成静态文件并提交到-GitHub" class="headerlink" title="三、生成静态文件并提交到 GitHub"></a><strong>三、生成静态文件并提交到 GitHub</strong></h3><p>在 Hexo 项目根目录下执行bash脚本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/bash</span><br><br><span class="hljs-comment"># 生成静态文件</span><br>hexo clean &amp;&amp; hexo g<br><br><span class="hljs-comment"># 部署到 GitHub Pages</span><br>hexo d<br></code></pre></td></tr></table></figure><p>可在 _config.yml 文件中的 deploy下的message字段设置提交信息。</p><p>首次部署可能会要求你输入 GitHub 账号和密码（或使用 SSH 方式）。</p><hr><h3 id="四、使用主题美化界面"><a href="#四、使用主题美化界面" class="headerlink" title="四、使用主题美化界面"></a><strong>四、使用主题美化界面</strong></h3><p>根据个人爱好从各式各样的主题中选择，我选择的是fuild主题。</p><hr><p>这样就完成了 Hexo 部署到 GitHub 的过程！🚀</p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
